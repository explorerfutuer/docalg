* KMP 字符串匹配算法
** 普通匹配原则
   (A) str_data: xababccdabefghabc
   (B) str_src: abcab
   1) A[0] != B[0]
   2) A[1] == B[0] -> A[2] == B[1] -> A[3] != B[2]
   3) A[2] != B[0]
   4) A[3] == B[0] -> A[4] == B[1] -> A[5] == B[2] -> A[6] != B[3]
   5) A[4] != B[0]
   6) ....
   普通匹配进行遍历时对A串依次遍历，中间和子串有部分匹配时，下次也是一次遍历，相对比较低效。
   其实在上述步骤中3),5)是可以跳过的
** KMP算法
*** 子串分析处理
    (B) str_src: abcab
    | 子串     | a | b | c | a | b |
    |----------+---+---+---+---+---|
    | 子串偏移 | 0 | 0 | 0 | 1 | 2 |
    | 原串偏移 | 0 | 1 | 2 | 3 | 3 |
*** 匹配顺序
   (A) str_data: xababccdabefghabc
   (B) str_src: abcab
   !: 代表匹配失败，每行代表依次匹配顺序
    | x | a | b | a | b | c | c | d | a |
    |---+---+---+---+---+---+---+---+---|
    | ! |   |   |   |   |   |   |   |   |
    |   | a | b | ! |   |   |   |   |   |
    |   |   |   | a | b | c | ! |   |   |
    |   |   |   |   |   |   | ! |   |   |
    |   |   |   |   |   |   |   | ! |   |
    |   |   |   |   |   |   |   |   | a |

   
